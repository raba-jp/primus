// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/raba-jp/primus/pkg/operations/network/handlers (interfaces: HTTPRequestHandler)

// Package mock_handlers is a generated GoMock package.
package mock_handlers

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	handlers "github.com/raba-jp/primus/pkg/operations/network/handlers"
	reflect "reflect"
)

// MockHTTPRequestHandler is a mock of HTTPRequestHandler interface
type MockHTTPRequestHandler struct {
	ctrl     *gomock.Controller
	recorder *MockHTTPRequestHandlerMockRecorder
}

// MockHTTPRequestHandlerMockRecorder is the mock recorder for MockHTTPRequestHandler
type MockHTTPRequestHandlerMockRecorder struct {
	mock *MockHTTPRequestHandler
}

// NewMockHTTPRequestHandler creates a new mock instance
func NewMockHTTPRequestHandler(ctrl *gomock.Controller) *MockHTTPRequestHandler {
	mock := &MockHTTPRequestHandler{ctrl: ctrl}
	mock.recorder = &MockHTTPRequestHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHTTPRequestHandler) EXPECT() *MockHTTPRequestHandlerMockRecorder {
	return m.recorder
}

// HTTPRequest mocks base method
func (m *MockHTTPRequestHandler) HTTPRequest(arg0 context.Context, arg1 bool, arg2 *handlers.HTTPRequestParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HTTPRequest", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// HTTPRequest indicates an expected call of HTTPRequest
func (mr *MockHTTPRequestHandlerMockRecorder) HTTPRequest(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HTTPRequest", reflect.TypeOf((*MockHTTPRequestHandler)(nil).HTTPRequest), arg0, arg1, arg2)
}
