// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/raba-jp/primus/pkg/operations/file/handlers (interfaces: CopyHandler)

// Package mock_handlers is a generated GoMock package.
package mock_handlers

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	handlers "github.com/raba-jp/primus/pkg/operations/file/handlers"
	reflect "reflect"
)

// MockCopyHandler is a mock of CopyHandler interface
type MockCopyHandler struct {
	ctrl     *gomock.Controller
	recorder *MockCopyHandlerMockRecorder
}

// MockCopyHandlerMockRecorder is the mock recorder for MockCopyHandler
type MockCopyHandlerMockRecorder struct {
	mock *MockCopyHandler
}

// NewMockCopyHandler creates a new mock instance
func NewMockCopyHandler(ctrl *gomock.Controller) *MockCopyHandler {
	mock := &MockCopyHandler{ctrl: ctrl}
	mock.recorder = &MockCopyHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCopyHandler) EXPECT() *MockCopyHandlerMockRecorder {
	return m.recorder
}

// Copy mocks base method
func (m *MockCopyHandler) Copy(arg0 context.Context, arg1 bool, arg2 *handlers.CopyParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Copy", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Copy indicates an expected call of Copy
func (mr *MockCopyHandlerMockRecorder) Copy(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Copy", reflect.TypeOf((*MockCopyHandler)(nil).Copy), arg0, arg1, arg2)
}
