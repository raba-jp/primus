// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/raba-jp/primus/pkg/operations/directory/handlers (interfaces: CreateHandler)

// Package mock_handlers is a generated GoMock package.
package mock_handlers

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	handlers "github.com/raba-jp/primus/pkg/operations/directory/handlers"
	reflect "reflect"
)

// MockCreateHandler is a mock of CreateHandler interface
type MockCreateHandler struct {
	ctrl     *gomock.Controller
	recorder *MockCreateHandlerMockRecorder
}

// MockCreateHandlerMockRecorder is the mock recorder for MockCreateHandler
type MockCreateHandlerMockRecorder struct {
	mock *MockCreateHandler
}

// NewMockCreateHandler creates a new mock instance
func NewMockCreateHandler(ctrl *gomock.Controller) *MockCreateHandler {
	mock := &MockCreateHandler{ctrl: ctrl}
	mock.recorder = &MockCreateHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCreateHandler) EXPECT() *MockCreateHandlerMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockCreateHandler) Create(arg0 context.Context, arg1 bool, arg2 *handlers.CreateParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create
func (mr *MockCreateHandlerMockRecorder) Create(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockCreateHandler)(nil).Create), arg0, arg1, arg2)
}
