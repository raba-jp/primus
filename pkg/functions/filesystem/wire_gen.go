// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package filesystem

import (
	"github.com/raba-jp/primus/pkg/modules"
	"go.starlark.net/starlark"
)

// Injectors from wire.go:

func NewFunctions() starlark.Value {
	fs := modules.NewFs()
	createDirectoryRunner := CreateDirectory(fs)
	createSymlinkRunner := CreateSymlink(fs)
	copyFileRunner := CopyFile(fs)
	moveFileRunner := MoveFile(fs)
	existsFileRunner := ExistsFile(fs)
	value := newFunctions(createDirectoryRunner, createSymlinkRunner, copyFileRunner, moveFileRunner, existsFileRunner)
	return value
}

// wire.go:

func newFunctions(
	createDirectory CreateDirectoryRunner,
	createSymlink CreateSymlinkRunner,
	copyFile CopyFileRunner,
	moveFile MoveFileRunner,
	existsFile ExistsFileRunner,
) starlark.Value {
	dict := starlark.NewDict(5)
	dict.SetKey(starlark.String("create_directory"), starlark.NewBuiltin(
		"create_directory",
		NewCreateDirectoryFunction(createDirectory),
	))
	dict.SetKey(starlark.String("create_symlink"), starlark.NewBuiltin(
		"create_symlink",
		NewCreateSymlinkFunction(createSymlink),
	))
	dict.SetKey(starlark.String("copy_file"), starlark.NewBuiltin(
		"copy_file",
		NewCopyFileFunction(copyFile),
	))
	dict.SetKey(starlark.String("move_file"), starlark.NewBuiltin(
		"move_file",
		NewMoveFileFunction(moveFile),
	))
	dict.SetKey(starlark.String("exists_file"), starlark.NewBuiltin(
		"exists_file",
		NewExistsFileFunction(existsFile),
	))
	return dict
}
